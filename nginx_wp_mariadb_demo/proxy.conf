#  docker logs -f 7ad08c3d2fcf 查看容器的日志
#  docker stop 7ad08c3d2fcf 停止容器
#  docker rm 7ad08c3d2fcf 删除容器 http://127.0.0.1:8080/
# docker exec -it nginx-proxy sh 进入容器
# ping host.docker.internal 测试是否可以访问外部网络

# server {
#     listen 80;
#     server_name localhost;

#     location / {
#         proxy_pass http://host.docker.internal:8080;
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto $scheme;

#         # 添加一个特殊的 header
#         add_header X-Proxied-By-Nginx "true" always;

#         # 添加错误日志
#         proxy_intercept_errors on;
#         error_log /var/log/nginx/error.log debug;
        
#         # 添加调试头
#         add_header X-Debug-Message "Proxying to $upstream_addr" always;
#     }
# }

# 因为 wordpress 需要特殊配置，所以在原来的基础上添加了以下配置
server {
    listen 80;
    server_name localhost;

    location / {
        proxy_pass http://host.docker.internal:8080;
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Fix WordPress redirects
        proxy_redirect http://host.docker.internal:8080 $scheme://$http_host;

        # Add a special header
        add_header X-Proxied-By-Nginx "true" always;

        # Add error logging
        proxy_intercept_errors on;
        error_log /var/log/nginx/error.log debug;
        
        # Add debug header
        add_header X-Debug-Message "Proxying to $upstream_addr" always;
    }
}